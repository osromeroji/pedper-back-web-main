openapi: 3.0.1
info:
  title: Quickstart service Demo
  description: Example API definition for quickstart project
  version: 1.1.0
tags:
  - name: examples
    description: Example Controller
  - name: vacancies
    description: Vacancy Controller
paths:
  /examples:
    get:
      tags:
        - examples
      summary: Method to retrieve a collection of examples
      description: This method retrieves a collection of examples
      operationId: getExampleCollection
      parameters:
        - name: firstPage
          in: query
          description: Requested page (first page is page 1). If not specified 1 is
            used. [Cannot be negative or zero]
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Number of retrieved elements per page. if not specified 10 is
            used. [Cannot be less than 1]
          schema:
            type: integer
            format: int32
            default: 10
        - name: sort
          in: query
          description: 'Sort of the query. [sort=+id] will order asc by id, or [sort=+id] desc by id). Default unsorted.'
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleResourceCollectionResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'

    post:
      tags:
        - examples
      summary: Method to add one example to the data storage
      description: This method creates a new example with the given body information
      operationId: createExample
      requestBody:
        description: exampleRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleRequest'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleResourceResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
  /examples/{id}:
    get:
      tags:
        - examples
      summary: Method to retrieve one example
      description: This method retrieves a example defined by a specific id
      operationId: getExample
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleResourceResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'

    put:
      tags:
        - examples
      summary: Method to update a example
      description: This method updates a example defined by its id
      operationId: updateExample
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: exampleRequest
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExampleRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleResourceResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'

    delete:
      tags:
        - examples
      summary: Method to delete a example
      description: This method delete a example by its id
      operationId: deleteExample
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        202:
          description: No content
          content: { }
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
  /vacancies:
    post:
      tags:
        - vacancies
      summary: Method to create a vacancy
      description: This method creates a new vacancy with the given body information
      operationId: createVacancy
      requestBody:
        description: vacancyRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacancyResource'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleResourceResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
  /vacancies/{id}:
    get:
      tags:
        - vacancies
      summary: Method to retrieve one vacancy
      description: This method retrieves a vacancy defined by a specific id
      operationId: getVacancy
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyResourceResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResourceResponse'

components:
  schemas:
    LegacyResource:
      title: LegacyResource
      type: object
      properties:
        publicId:
          type: string
        thirdPartyId:
          type: string
        siteId:
          type: string
        companyId:
          type: string
        typeId:
          type: string
        name:
          type: string
        location:
          type: string
        province:
          type: string
        groupingName:
          type: string
        activationDate:
          type: string
        deactivationDate:
          type: string
    ExampleRequest:
      title: ExampleRequest
      required:
        - creationTime
        - description
        - identification
        - identificationType
        - name
        - numberOfDaysInWeek
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          maxLength: 30
          minLength: 5
          type: string
        creationTime:
          type: string
          format: date-time
        identificationType:
          $ref: '#/components/schemas/IdentificationTypesRequestEnum'
        identification:
          pattern: (?:(?=^[0-9])[0-9]{8}[A-Z]{1}$|(?!^[0-9])[A-Z]{1}[0-9]{7}[A-Z]{1}$)
          type: string
        numberOfDaysInWeek:
          maximum: 7
          minimum: 1
          type: integer
          format: int32
    ExampleResource:
      title: ExampleResource
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        creationTime:
          type: string
          format: date-time
        identificationType:
          $ref: '#/components/schemas/IdentificationTypesRequestEnum'
        identification:
          type: string
        numberOfDaysInWeek:
          type: integer
          format: int32
    VacancyResource:
      title: VacancyResource
      type: object
      properties:
        id:
          type: integer
          format: int64
        startDate:
          type: string
        endDate:
          type: string
        onboardingDate:
          type: string
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/VacancyCandidateResource'
    VacancyCandidateResource:
      type: object
      properties:
        candidate:
          $ref: '#/components/schemas/CandidateResource'
        createdDate:
          type: string
    CandidateResource:
      type: object
      properties:
        employeeId:
          type: string
        managedGroupId:
          type: string
        name:
          type: string
    ExampleResourceResponse:
      title: ExampleResourceResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ExampleResource'
    VacancyResourceResponse:
      title: VacancyResourceResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VacancyResource'
    ExampleResourceCollection:
      title: ExampleResourceCollection
      type: object
      properties:
        examples:
          type: array
          items:
            $ref: '#/components/schemas/ExampleResource'
    ExampleResourceCollectionResponse:
      title: ExampleResourceCollectionResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ExampleResourceCollection'
        pagination:
          $ref: '#/components/schemas/Pagination'
    ErrorResource:
      title: ErrorResource
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        details:
          type: array
          items:
            type: string
    ErrorResourceResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorResource'
    IdentificationTypesRequestEnum:
      type: string
      enum:
        - DNI
        - NIE
    Pagination:
      type: object
      properties:
        requestedPage:
          type: integer
          format: int32
        requestedSize:
          type: integer
          format: int32
        retrievedResults:
          type: integer
          format: int32
        totalResults:
          type: integer
          format: int64
        nextPage:
          type: string
        previousPage:
          type: string
